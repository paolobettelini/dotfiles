(defwindow dashboard
    :monitor 2
    :geometry (geometry
        :x "0px"
        :y "0px"
        :anchor "center center"
    )
    (dashboard)
)

;; Dashboard

(defwidget dashboard []
    (box
        :orientation "h"
        (box
            :orientation "v"
            :space-evenly false
            (box
                :orientation "h"
                :space-evenly false
                (box
                    :style "margin:  5 5 5 5;"
                    (shutdown-btn)
                )
                (box
                    :style "margin:  5 5 5 5;"
                    (suspend-btn)
                )
                (box
                    :style "margin:  5 5 5 5;"
                    (reboot-btn)
                )
                (box
                    :style "margin:  5 5 5 5;"
                    (logout-btn)
                )
            )
            (box
                :orientation "h"
                :space-evenly false
                (box
                    :space-evenly false
                    :style "margin:  5 5 5 5;"
                    (volume)
                )
                (box
                    :style "margin:  5 5 5 5;"
                    (clock)
                )
            )
            (box
                :orientation "h"
                :space-evenly false
                (box
                    :style "margin:  5 5 5 5;"
                    (youtube)
                )
                (box
                    :style "margin:  5 5 5 5;"
                    (reddit)
                )
                (box
                    :style "margin:  5 5 5 5;"
                    (whatsapp)
                )
                (box
                    :space-evenly false
                    :style "margin:  5 5 5 5;"
                    (github)
                )
            )
        )
        (box
            :orientation "v"
            (box
                :space-evenly false
                :style "margin:  5 5 145 5;"
                (weather)
            )
        )
    )
)

;; Sys buttons

(defwidget reboot-btn []
    (box
        :orientation "v"
        :class "sysbtn"
        (button
            :class "reboot_btn"
            :timeout "60s"
            :onclick "dashboard systemctl reboot"
            ""
        )
    )
)

(defwidget shutdown-btn []
    (box
        :orientation "v"
        :class "sysbtn"
        (button
            :class "shutdown_btn"
            :timeout "60s"
            :onclick "dashboard systemctl poweroff"
            "⏻"
        )
    )
)

(defwidget suspend-btn []
    (box
        :orientation "v"
        :class "sysbtn"
        (button
            :class "suspend_btn"
            :timeout "60s"
            :onclick "dashboard systemctl suspend"
            ""
        )
    )
)

(defwidget logout-btn []
    (box
        :orientation "v"
        :class "sysbtn"
        (button
            :class "logout_btn"
            :timeout "60s"
            "󰗼"
        )
    )
)

;; Volume

; Please fix this. It doesn't need to be repeating
(defpoll VOLUME :interval "1h" `volume get`)

(defwidget volume []
    (box
        :orientation "v"
        :class "keepbackground volume"
        (label :class "volume_icon" :text 󰕾)
        (scale
            :value VOLUME
            :min 0
            :max 25
            :draw-value true
            :orientation "h"
            :onchange "volume set {}"
        )
    )
)

;; Clock

(defpoll HOUR :interval "5s" `date +\"%I\"`)
(defpoll MIN :interval "5s" `date +\"%M\"`)
(defpoll MER :interval "5s" `date +\"%p\"`)
(defpoll DAY :interval "5s" `date +\"%A\"`)

(defwidget clock []
    (box
        :class "keepbackground clock"
        (box
            :orientation "h"
            :spacing 50
            :space-evenly false
            :vexpand "false"
            :hexpand "false"
            (box
                :orientation "h"
                :spacing 0
                (label
                    :class "time_hour"
                    :valign "start"
                    :wrap "true"
                    :limit-width 25
                    :text HOUR)
                (label
                    :class "time_min"
                    :valign "end"
                    :wrap "true"
                    :limit-width 25
                    :text MIN)
                )
            (box
                :orientation "v"
                :spacing 0 
                (label
                    :class "time_mer"
                    :valign "start"
                    :halign "end"
                    :wrap "true"
                    :limit-width 25
                    :text MER
                )
                (label
                    :class "time_day"
                    :valign "end"
                    :halign "end"
                    :wrap "true"
                    :limit-width 25
                    :text DAY
                )
            )
        )
    )
)

;; Weather

(defpoll ICON :interval "10m" `weather_info --icon`)
(defpoll STAT :interval "10m" `weather_info --stat`)
(defpoll TEMP :interval "10m" `weather_info --temp`)
(defpoll HEX :interval "10m" `weather_info --hex`)

(defwidget weather [] 
	(box
        :class "keepbackground weather" 
		(box
            :orientation "v"
            :spacing 10
            :space-evenly "false"
            :vexpand "false"
            :hexpand "false" 
			(box
                :orientation "h"
                :vexpand "false"
                :hexpand "false" 
				(label
                    :class "iconweather"
                    :halign "start"
                    :style "color: ${HEX};"
                    :text ICON
                )
				(label
                    :class "label_temp"
                    :halign "end"
                    :text TEMP
                )
            )
			(box
                :orientation "v"
                :spacing 10
                :halign "center"
                :space-evenly "false"
                :vexpand "false"
                :hexpand "false" 
				(label :class "label_stat" :text STAT)
            )
        )
    )
)

;; Platofrms

(defwidget github [] 
    (box
        :class "webbtn github"
        :onclick "dashboard firefox --new-tab https://github.com/"
        ""
    )
)

(defwidget youtube [] 

    (box
        :class "webbtn youtube"
        :onclick "dashboard firefox --new-tab https://www.youtube.com/"
        ""
    )
)

(defwidget reddit [] 
    (box
        :class "webbtn reddit"
        :onclick "dashboard firefox --new-tab https://www.reddit.com/"
        "樓"
    )
)

(defwidget whatsapp []
    (box
        :class "webbtn whatsapp"
        :onclick "dashboard firefox --new-tab https://web.whatsapp.com/"
        ""
    )
)